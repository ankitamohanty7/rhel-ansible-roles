---
- name: Configure RHEL systems
  hosts: all
  become: true
  vars:
    #
    # abrt_setup
    #
    abrt_setup_enable_console_notification: true
    abrt_setup_enable_java_connector: true
    abrt_setup_enable_sosreport_plugin: true
    abrt_setup_enable_unsigned_reports: true
    abrt_setup_enable_vmcore_spooling: false
    abrt_setup_report_fatal_mce_only: true

    # Disable instead of enable
    abrt_setup_uninstall: false
    # Purge all related directories
    abrt_setup_uninstall_purge: true

    #
    # aide_setup
    #
    # Enable periodic aide checks from cron,
    # either: hourly, daily, weekly, monthly
    # Use 'disabled' to disable cron checks.
    aide_setup_check_frequency: weekly

    #
    # audit_setup
    #
    audit_setup_rules: local_default

    #
    # base_packages - list omitted here for brevity
    #

    #
    # boot_parameters
    #
    # Space-separated lists
    boot_parameters_enable: "quiet"
    boot_parameters_disable: "debug rhgb"
    # Reboot system after changes
    boot_parameters_reboot: true

    #
    # certificates
    #
    certificates_ca_file: local-ca-bundle.pem

    #
    # domain_ad
    #
    # Allowed actions: join, leave
    domain_ad_action: join
    domain_ad_domain: example.com
    # These should come from vault
    #domain_ad_admin_username:
    #domain_ad_admin_password:
    domain_ad_computer_precreated: false
    domain_ad_delete_on_leave: true
    #domain_ad_allow_groups: GROUP@example.com

    # Enable or disable running authconfig/authselect
    # If false then setup by this role is not complete
    domain_ad_auth_conf_update: true

    #
    # fapolicyd_setup
    #
    # Enable or disable service after configuration
    # to allow testing and verification before use.
    # NB. See ima_evm_setup if planning to use IMA.
    fapolicyd_setup_enable_service: false

    #
    # firewall
    #
    # Comma-separated list of ports (80/tcp,123/udp) or services (cockpit,https)
    # vars/main.yml lists always open ports/services. ssh is always kept open.
    firewall_open_ports: ""
    firewall_open_services: ""
    firewall_default_zone: public

    #
    # performance_tuning
    #
    tuned_profile: "{{ 'virtual-guest' if ansible_facts.virtualization_role == 'guest' else 'throughput-performance' }}"

    #
    # remove_packages - list omitted here for brevity
    #

    #
    # root_password
    #
    # This should come from vault
    #root_password:

    #
    # security_hardening
    #
    selinux: enforcing

    crypto_policy: DEFAULT

    # Available alternatives under files/
    password_quality_policy: local_default

    # One of: disabled, integrity, confidentiality
    # NB. Enabling lockdown will prevent using kdump
    kernel_lockdown: disabled

    #
    # splunk_forwarder
    #
    splunk_user_uid: 4445
    splunk_deployment_server: splunk.example.com
    splunk_deployment_server_port: 8089
    splunk_deployment_server_check: true
    # Allowed states: present, latest
    splunk_forwarder_package_state: present

    #
    # sshd_configuration
    #
    # Either comma-separated list or proper dict
    # These options will be enabled/updated in config
    sshd_options: PermitRootLogin:prohibit-password,X11Forwarding:no
    # Either comma-separated list or proper list
    # These options will be commented out from config
    sshd_options_disable: Banner

    #
    # system_init
    #
    # Actions to take after initialization
    # nothing - do not reboot or write log
    # reboot - reboot after initialization
    # syslog - write message to system log
    system_init_final_actions: reboot,syslog

    #
    # system_locale
    #
    # Available locale choices:
    # C.UTF-8 - properly supported on RHEL 9+
    # en_US.UTF-8 - supported on all RHEL versions
    # auto - use C.UTF-8 if RHEL 9+ else en_US.UTF-8
    system_locale: auto
    # Reboot system after changes
    system_locale_reboot: true

    #
    # system_update
    #
    # Reboot policy after applying updates
    # never - never reboot even if updates would require reboot
    # when_needed - reboot only when needed (using needs-restarting)
    # when_updated - reboot if updates were installed
    # always - always reboot even if no updates were installed
    system_update_reboot_policy: when_needed

    # Set true to send a report after updating packages
    system_update_report: true
    # Default recipient email address for the report if no
    # host-specific variable 'email' set in the inventory.
    system_update_report_default_recipient: root@localhost

    #
    # system_update_report_pre
    #
    # Default recipient email address for the report if no
    # host-specific variable 'email' set in the inventory.
    system_update_report_pre_default_recipient: root@localhost

    #
    # timesync
    #
    ntp_servers: 0.rhel.pool.ntp.org,1.rhel.pool.ntp.org,2.rhel.pool.ntp.org,3.rhel.pool.ntp.org

    #
    # troubleshooting_packages - list omitted here for brevity
    #

    #
    # web_console
    #
    web_console_enable_perf_metrics: true

  roles:
    - timesync
    - remove_packages
    - boot_parameters
    - system_locale
    - audit_setup
    #- abrt_setup
    #- aide_setup
    - base_packages
    - certificates
    #- domain_ad
    ##- ima_evm_setup
    #- fapolicyd_setup
    - firewall
    #- motd
    - performance_tuning
    - root_password
    - security_hardening
    #- shell_profile
    #- splunk_forwarder
    - sshd_configuration
    #- troubleshooting_packages
    #- web_console
    #- system_update_report_pre
    #- system_update
    - system_init
