---
- name: Install firewalld package
  yum:
    name: firewalld
    state: present

- name: Disallow zone drifting
  replace:
    dest: /etc/firewalld/firewalld.conf
    regexp: '^AllowZoneDrifting=yes'
    replace: 'AllowZoneDrifting=no'
  register: firewalld_config

- name: Start firewalld service
  service:
    name: firewalld
    state: "{{ 'restarted' if firewalld_config is changed else 'started' }}"
    enabled: true

- name: Set default zone
  command: firewall-cmd --set-default-zone={{ firewall_default_zone }}
  register: cmd_result
  changed_when: "'ZONE_ALREADY_SET' not in cmd_result.stderr"

- name: Set list of ports to open
  set_fact:
    ports_to_open: "{{ (firewall_always_open_ports.split(',') | select() + firewall_open_ports.split(',') | select()) | unique }}"

- name: Open configured ports in firewall
  firewalld:
    zone: "{{ firewall_default_zone }}"
    port: "{{ item }}"
    permanent: true
    immediate: true
    state: enabled
  loop: "{{ ports_to_open }}"

- name: Check open ports in firewall
  command: firewall-cmd --zone={{ firewall_default_zone }} --list-ports
  register: open_ports
  changed_when: false

- name: Close unconfigured ports in firewall
  firewalld:
    zone: "{{ firewall_default_zone }}"
    port: "{{ item }}"
    permanent: true
    immediate: true
    state: disabled
  loop: "{{ open_ports.stdout.split(' ') | select() }}"
  when: item not in ports_to_open

- name: Set list of services to open
  set_fact:
    services_to_open: "{{ (firewall_always_open_services.split(',') | select() + firewall_open_services.split(',') | select()) | unique }}"

- name: Open configured services in firewall
  firewalld:
    zone: "{{ firewall_default_zone }}"
    service: "{{ item }}"
    permanent: true
    immediate: true
    state: enabled
  loop: "{{ services_to_open }}"

- name: Check open services in firewall
  command: firewall-cmd --zone={{ firewall_default_zone }} --list-services
  register: open_services
  changed_when: false

- name: Close unconfigured services in firewall
  firewalld:
    zone: "{{ firewall_default_zone }}"
    service: "{{ item }}"
    permanent: true
    immediate: true
    state: disabled
  loop: "{{ open_services.stdout.split(' ') | select() }}"
  when: item != 'ssh' and item not in services_to_open
