---
- name: Install firewalld package
  yum:
    name: firewalld
    state: present

- name: Disallow zone drifting
  replace:
    dest: /etc/firewalld/firewalld.conf
    regexp: '^AllowZoneDrifting=yes'
    replace: 'AllowZoneDrifting=no'
  register: firewalld_config

- name: Enable firewalld service
  service:
    name: firewalld
    enabled: true

- name: Start firewalld service
  service:
    name: firewalld
    state: started
  register: service_start

- name: Apply firewalld configuration changes
  service:
    name: firewalld
    state: reloaded
  when:
    - service_start is not changed
    - firewalld_config is changed

- name: Configure default zone
  command: firewall-cmd --set-default-zone={{ firewall_default_zone }}
  register: firewall_cmd_result
  changed_when: "'ZONE_ALREADY_SET' not in firewall_cmd_result.stderr"

- name: Set list of ports to open
  set_fact:
    ports_to_open: "{{ (__firewall_always_open_ports | default([], true) + firewall_open_ports | default([], true)) | select() | list | unique }}"

- name: Open configured ports in firewall
  firewalld:
    zone: "{{ firewall_default_zone }}"
    port: "{{ item }}"
    permanent: true
    immediate: true
    state: enabled
  loop: "{{ ports_to_open }}"

- name: Check open ports in firewall
  command: firewall-cmd --zone={{ firewall_default_zone }} --list-ports
  register: open_ports
  changed_when: false

- name: Close unconfigured ports in firewall
  firewalld:
    zone: "{{ firewall_default_zone }}"
    port: "{{ item }}"
    permanent: true
    immediate: true
    state: disabled
  loop: "{{ open_ports.stdout.split(' ') | select() | list }}"
  when:
    - firewall_close_unconfigured | bool
    - item not in ports_to_open

- name: Display unconfigured ports left open
  vars:
    unclosed_ports: "{{ open_ports.stdout.split(' ') | select() | difference(ports_to_open) | list }}"
  debug:
    msg: "{{ unclosed_ports | join(' ') }}"
  when:
    - not firewall_close_unconfigured | bool
    - unclosed_ports

- name: Set list of services to open
  set_fact:
    services_to_open: "{{ (__firewall_always_open_services | default([], true) + firewall_open_services | default([], true)) | select() | list | unique }}"

- name: Open configured services in firewall
  firewalld:
    zone: "{{ firewall_default_zone }}"
    service: "{{ item }}"
    permanent: true
    immediate: true
    state: enabled
  loop: "{{ services_to_open }}"

- name: Check open services in firewall
  command: firewall-cmd --zone={{ firewall_default_zone }} --list-services
  register: open_services
  changed_when: false

- name: Close unconfigured services in firewall
  firewalld:
    zone: "{{ firewall_default_zone }}"
    service: "{{ item }}"
    permanent: true
    immediate: true
    state: disabled
  loop: "{{ open_services.stdout.split(' ') | select() | list }}"
  when:
    - item != 'ssh'
    - firewall_close_unconfigured | bool
    - item not in services_to_open

- name: Display unconfigured services left open
  vars:
    unclosed_services: "{{ open_services.stdout.split(' ') | select() | difference(services_to_open) | difference(['ssh']) | list }}"
  debug:
    msg: "{{ unclosed_services | join(' ') }}"
  when:
    - not firewall_close_unconfigured | bool
    - unclosed_services
