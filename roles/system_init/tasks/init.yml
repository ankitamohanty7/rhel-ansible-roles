---
- name: Gather package facts
  package_facts:

- name: Remove old kernel packages (RHEL 7)
  command: package-cleanup -C --oldkernels --count=1 -y
  when:
    - ansible_facts.pkg_mgr == 'yum'
    - ansible_facts.packages['kernel'] | length > 1

- name: Remove old kernel packages
  command:
    cmd: dnf -C remove --oldinstallonly -y
    warn: false
  when:
    - ansible_facts.pkg_mgr == 'dnf'
    - ansible_facts.packages['kernel'] | length > 1

- name: Locate NIC ifcfg configuration files
  find:
    paths: /etc/sysconfig/network-scripts
    patterns:
      - 'ifcfg-e*'
      - 'ifcfg-net*'
  register: ifcfg_files

# https://bugzilla.redhat.com/show_bug.cgi?id=2050704
- name: Fix VMware NIC configuration
  replace:
    path: "{{ item }}"
    regexp: '^\ncheck_link_down\(\) {\n return 1; \n}\n$'
    replace: ''
  register: nic_config
  loop: "{{ ifcfg_files.files | map(attribute='path') | list }}"

# https://bugzilla.redhat.com/show_bug.cgi?id=2056891
- name: Ensure correct /etc/hostname
  copy:
    content: "{{ inventory_hostname | lower }}\n"
    dest: /etc/hostname
    mode: '0644'
  register: hostname_config
  when:
    - "'.' in inventory_hostname"
    - "':' not in inventory_hostname"
    - inventory_hostname | regex_search('[a-zA-Z]')

- name: Rebuild initramfs
  command: dracut -f --regenerate-all
  when: nic_config is changed or
        hostname_config is changed

- name: Check installer log directory
  stat:
    path: /var/log/anaconda
  register: installer_logdir

- name: Locate installer leftover root files
  find:
    paths: /root
    patterns:
      - '*-ks.cfg'
      - 'install.post*.log'
  register: root_files

- name: Locate installer leftover kickstart files
  find:
    paths: /tmp
    patterns:
      - 'ks-script-*'
  register: kickstart_files
  when: installer_logdir.stat.exists

- name: Set list of installer leftover files
  set_fact:
    installer_files: "{{ (root_files.files + kickstart_files.files) | map(attribute='path') | list }}"
  when: installer_logdir.stat.exists

- name: Store installer leftover files
  copy:
    remote_src: true
    src: "{{ item }}"
    dest: /var/log/anaconda
    mode: '0700'
  loop: "{{ installer_files }}"
  loop_control:
    label: "{{ item }} -> /var/log/anaconda/{{ item | basename }}"
  when: installer_logdir.stat.exists

- name: Relabel stored installer files
  sefcontext:
    target: /var/log/anaconda/{{ item | basename }}
    setype: var_log_t
    state: present
  loop: "{{ installer_files }}"
  loop_control:
    label: /var/log/anaconda/{{ item | basename }}
  when:
    - "'libselinux-python' in ansible_facts.packages or
       'python3-libselinux' in ansible_facts.packages"
    - installer_logdir.stat.exists

- name: Locate leftover temp files
  find:
    paths: /tmp
    hidden: true
    file_type: any
    patterns:
      - '.cache'
      - '.vmware-*'
      - 'foreman_*'
      - 'ks-script-*'
      - 'tmp.*'
      - 'vmware-root_*'
  register: leftover_files

- name: Remove all leftover files
  file:
    path: "{{ item }}"
    state: absent
  loop: "{{ (leftover_files.files + root_files.files) | map(attribute='path') | list }}"

- name: Mark system initialized
  copy:
    content: "This system was initialized on {{ '%Y-%m-%d %H:%M:%S %Z' | strftime }}.\n"
    dest: "{{ __system_init_file }}"
    mode: '0644'

- name: Reboot system
  reboot:
  when: "'reboot' in system_init_final_actions"

- name: Log initialization message
  syslogger:
    msg: "System initialized by system_init."
  when: "'syslog' in system_init_final_actions"
