---
- name: Install SELinux packages
  yum:
    name: "{{ selinux_packages }}"
    state: present
  vars:
    selinux_package_lists:
      rhel7:
        - libselinux-python
        - libsemanage-python
        - policycoreutils-python
        - selinux-policy-targeted
        - setools-console
      default:
        - python3-libselinux
        - python3-libsemanage
        - policycoreutils-python-utils
        - selinux-policy-targeted
        - setools-console
    distro_id: "{{ 'rhel' + ansible_facts.distribution_major_version }}"
    package_set: "{{ 'default' if distro_id not in selinux_package_lists else distro_id }}"
    selinux_packages: "{{ selinux_package_lists[package_set] }}"

- name: Configure SELinux state
  selinux:
    policy: targeted
    state: "{{ selinux }}"
  register: selinux_config

- name: Check current crypto policy
  command: update-crypto-policies --show
  register: current_crypto_policy
  changed_when: false
  when: ansible_facts.distribution_major_version|int >= 8

- name: Configure crypto policy
  command: update-crypto-policies --set {{ crypto_policy }}
  register: crypto_policy_config
  when:
    - ansible_facts.distribution_major_version|int >= 8
    - current_crypto_policy is not skipped
    - current_crypto_policy.stdout != crypto_policy

- name: Configure system-local password quality requirements (RHEL 7)
  copy:
    src: "{{ password_quality_policy }}.conf"
    dest: /etc/security/pwquality.conf
    mode: '0644'
  when: ansible_facts.distribution_major_version|int < 8

- name: Configure system-local password quality requirements
  copy:
    src: "{{ password_quality_policy }}.conf"
    dest: /etc/security/pwquality.conf.d/zz-local.conf
    mode: '0644'
  when: ansible_facts.distribution_major_version|int >= 8

# https://bugzilla.redhat.com/show_bug.cgi?id=2055604
- name: Ensure system-local password quality requirements
  copy:
    src: rhel{{ ansible_facts.distribution_major_version }}_default.conf
    dest: /etc/security/pwquality.conf
    mode: '0644'
  when: ansible_facts.distribution_major_version|int >= 8

- name: Install grubby package
  yum:
    name: grubby
    state: present
  when: ansible_facts.distribution_major_version|int >= 9

- name: Check kernel lockdown configuration
  vars:
    lockdown_param: "{{ 'lockdown=' + kernel_lockdown if kernel_lockdown != 'disabled' else 'lockdown' }}"
  shell: grep '^GRUB_CMDLINE_LINUX=' /etc/default/grub | grep -Eq '("| ){{ lockdown_param }}(=| |")'
  register: lockdown_check
  failed_when: false
  changed_when: false
  when: ansible_facts.distribution_major_version|int >= 9

- name: Configure kernel lockdown
  command: >
    grubby
    --update-kernel=ALL
    --remove-args=lockdown
    "{{ '--args=lockdown=' + kernel_lockdown if kernel_lockdown != 'disabled' else '' }}"
  register: lockdown_config
  when:
    - ansible_facts.distribution_major_version|int >= 9
    - (kernel_lockdown == 'disabled' and lockdown_check.rc == 0) or
      (kernel_lockdown != 'disabled' and lockdown_check.rc != 0)

- name: Reboot system
  reboot:
  when: selinux_config.reboot_required or
        (current_crypto_policy is not skipped and crypto_policy_config is changed) or
        (lockdown_config is not skipped and lockdown_config is changed)
