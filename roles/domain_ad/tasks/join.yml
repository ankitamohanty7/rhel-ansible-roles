---
- name: Check system authentication configuration
  lineinfile:
    path: /etc/pam.d/system-auth
    regexp: '^auth.*pam_sss.so.*'
    state: absent
  check_mode: true
  register: auth_config
  changed_when: false

- name: Create Kerberos configuration file
  template:
    src: krb5.conf.j2
    dest: /etc/krb5.conf
    mode: '0644'
  register: krb5_config

- name: Create SSSD configuration file
  template:
    src: sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    mode: '0600'
  register: sssd_config

- name: Join AD domain
  shell: >
    echo '{{ domain_ad_admin_password }}' |
    adcli -v join
    --domain={{ domain_ad_domain }}
    --login-user={{ domain_ad_admin_username }}
    --stdin-password
  no_log: true
  when: not krb5_keytab.stat.exists

- name: Enable oddjobd service
  service:
    name: oddjobd
    state: started
    enabled: true

- name: Enable sssd service
  service:
    name: sssd
    state: started
    enabled: true
  register: service_start

- name: Apply sssd configuration changes
  service:
    name: sssd
    state: restarted
  when:
    - service_start is not changed
    - not krb5_keytab.stat.exists or krb5_config is changed or sssd_config is changed

- name: Configure system-wide authentication (RHEL 7)
  command: authconfig --enablemkhomedir --enablesssd --enablesssdauth --update
  when:
    - auth_config.found == 0
    - domain_ad_auth_conf_update | bool
    - ansible_facts.distribution_major_version|int < 8

- name: Configure system-wide authentication
  command: authselect select -f sssd with-mkhomedir
  when:
    - auth_config.found == 0
    - domain_ad_auth_conf_update | bool
    - ansible_facts.distribution_major_version|int >= 8
