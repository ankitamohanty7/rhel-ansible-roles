---
- name: Check available package updates
  yum:
    name: '*'
    state: latest
    update_cache: true
  register: package_update
  changed_when: false
  check_mode: true

- name: Save list of available package updates (dnf)
  set_fact:
    package_updates: "{{ package_update.results | join('\n') }}"
  when: ansible_facts.pkg_mgr == 'dnf' and 'Nothing to do' not in package_update.msg

- name: Save list of available package updates (yum)
  set_fact:
    package_updates: "{{ package_update.changes | dict2items | join('\n') }}"
  when: ansible_facts.pkg_mgr == 'yum' and package_update.changes is defined

- name: Display list of available package updates
  debug:
    var: package_updates
  when: package_updates is defined

- name: Notify about upcoming package updates
  script: send-notification '{{ hostvars[item].email | default(default_recipient, true) }}' '{{ item }}' '{{ hostvars[item].package_updates }}'
  register: command_output
  delegate_to: localhost
  run_once: true
  become: false
  when: hostvars[item].package_updates is defined
  loop: "{{ ansible_play_batch }}"

- name: Display notification command debug output
  debug:
    msg: "{{ command_output.results | selectattr('item', 'equalto', inventory_hostname) | map(attribute='stdout') | first }}"
  when: hostvars[inventory_hostname].package_updates is defined
