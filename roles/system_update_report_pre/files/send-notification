#!/usr/bin/env python3
""" Send system update notification email """
# pylint: disable=invalid-name,consider-using-f-string

import email.utils
import smtplib
import ssl
import sys
import os

from email.mime.application import MIMEApplication
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

# Defaults
SMTP_SERVER = "192.168.1.1"
SMTP_PORT = 587
SMTP_PASSWORD = None
EMAIL_SENDER = "no-reply@localhost.localdomain"
EMAIL_SUBJECT = "[INFO] Upcoming System Update"
EMAIL_PDF = False
PDF_DIR = "/tmp/.ansible.pdf"

debug = True
message = ""

if len(sys.argv) < 4:
    sys.stderr.write("Usage: %s <email_to> <system> <update_message>\n"
                     % os.path.basename(sys.argv[0]))
    sys.exit(1)

email_to = sys.argv[1]
system = sys.argv[2]

if "SMTP_SERVER" in os.environ:
    SMTP_SERVER = os.environ["SMTP_SERVER"]
if "SMTP_PORT" in os.environ:
    SMTP_PORT = os.environ["SMTP_PORT"]
if "SMTP_PASSWORD" in os.environ:
    SMTP_PASSWORD = os.environ["SMTP_PASSWORD"]
if "EMAIL_SENDER" in os.environ:
    EMAIL_SENDER = os.environ["EMAIL_SENDER"]
if "EMAIL_SUBJECT" in os.environ:
    EMAIL_SUBJECT = os.environ["EMAIL_SUBJECT"]
if "EMAIL_PDF" in os.environ:
    EMAIL_PDF = os.environ["EMAIL_PDF"] in ("True", "true")
if "PDF_DIR" in os.environ:
    PDF_DIR = os.environ["PDF_DIR"]

message += "\n<p>System to be updated:\t\t%s</p>\n" % system
if len(sys.argv) == 4:
    message += "<p>Pending updates:<br></p>\n<pre>\n%s\n</pre>\n" % str(sys.argv[3])
else:
    message += "<p>Pending updates:<br></p>\n<pre>\n"
    for i in range(3, len(sys.argv)):
        if sys.argv[i][0] == "{":
            message += "\n"
        else:
            message += " "
        message += "%s" % sys.argv[i]
    message += "\n</pre>\n"
message += "\n\n<p><br><i>Do not reply to this email.</i></p>\n</html>\n"

report = MIMEMultipart()
report["Message-ID"] = email.utils.make_msgid()
report["Subject"] = EMAIL_SUBJECT + ": " + system
report["Date"] = email.utils.formatdate(localtime=True)
report["From"] = EMAIL_SENDER
report["To"] = email_to
report.attach(MIMEText(message, "html"))

if EMAIL_PDF:
    system_pdf = system.replace(".", "_") + ".pdf"
    with open(PDF_DIR + "/" + system_pdf, "rb") as pdf:
        attachment = MIMEApplication(pdf.read(), _subtype="pdf")
    attachment.add_header("Content-Disposition", "attachment", filename=system_pdf)
    report.attach(attachment)

if debug:
    sys.stdout.write(report.as_string())
    sys.exit(0)

if SMTP_PASSWORD:
    context = ssl.create_default_context()
    with smtplib.SMTP_SSL(SMTP_SERVER, SMTP_PORT, context=context) as server:
        server.login(EMAIL_SENDER, SMTP_PASSWORD)
        server.send_message(report)
elif SMTP_PORT in (445, 465, 587):
    with smtplib.SMTP_SSL(SMTP_SERVER, SMTP_PORT) as server:
        server.send_message(report)
else:
    with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
        server.send_message(report)
